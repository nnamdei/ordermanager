// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  role      String   @default("user")// "admin" or "user"
  orders    Order[]
  messages  Message[]
}

model Order {
  id            String    @id @default(uuid())
  description   String
  specifications String
  quantity      Int
  metadata      Json
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  chatRoom      ChatRoom?
  status        String    @default("Review") // "Review", "Processing", "Completed"
}

model ChatRoom {
  id          String   @id @default(uuid())
  orderId     String   @unique // Marked as unique for one-to-one relation
  order       Order    @relation(fields: [orderId], references: [id])
  messages    Message[]
  isClosed    Boolean  @default(false)
  summary     String?
}

model Message {
  id          String   @id @default(uuid())
  content     String
  senderId    String
  sender      User     @relation(fields: [senderId], references: [id])
  chatRoomId  String
  chatRoom    ChatRoom @relation(fields: [chatRoomId], references: [id])
  createdAt   DateTime @default(now())
}


